// Generated by CoffeeScript 1.5.0
var Prez;

Prez = (function() {

  function Prez() {
    var _this = this;
    this.prezChromeHeight = 65;
    this.hasPrez = false;
    this.prezPosition = $('#presentation_position').val();
    $("#presentation_url").on("keyup", function() {
      return _this.updatePresentation();
    });
    $("#presentation_position").on("change", function() {
      return _this.updatePresentationPosition();
    });
    $("#source_embed_code").on("keyup", function() {
      return _this.updateEmbedCode();
    });
  }

  Prez.prototype.updatePresentation = function() {
    var prezUrl,
      _this = this;
    this.hasPrez = false;
    prezUrl = $('#presentation_url').val();
    return this.getPresentationData(prezUrl, function(data) {
      _this.prezOriginalWidth = data.width;
      _this.prezOriginalHeight = data.height;
      _this.prezId = _this._extractSpeakerDeckId(data.html);
      _this.hasPrez = true;
      return _this.updateEmbedCode();
    });
  };

  Prez.prototype.updatePresentationPosition = function() {
    this.prezPosition = $('#presentation_position').val();
    return this.updateEmbedCode();
  };

  Prez.prototype._extractSpeakerDeckId = function(embedCode) {
    var regex;
    regex = /speakerdeck\.com\/player\/([0-9a-zA-Z]+)/;
    return regex.exec(embedCode)[1];
  };

  Prez.prototype.prezWidth = function() {
    if (this.prezPosition === 'left' || this.prezPosition === 'right') {
      return Math.round((this.sourceEmbedCode.height() - this.prezChromeHeight) * this.prezSlideAspect());
    } else {
      return this.sourceEmbedCode.width();
    }
  };

  Prez.prototype.prezHeight = function() {
    if (this.prezPosition === 'left' || this.prezPosition === 'right') {
      return this.sourceEmbedCode.height();
    } else {
      return Math.round(this.sourceEmbedCode.width() / this.prezSlideAspect() + this.prezChromeHeight);
    }
  };

  Prez.prototype.prezSlideAspect = function() {
    return this.prezOriginalWidth / (this.prezOriginalHeight - this.prezChromeHeight);
  };

  Prez.prototype.updateEmbedCode = function() {
    this.sourceEmbedCode = Wistia.EmbedCode.parse($("#source_embed_code").val());
    this.outputEmbedCode = Wistia.EmbedCode.parse($("#source_embed_code").val());
    if (this.sourceEmbedCode && this.sourceEmbedCode.isValid()) {
      if (this.hasPrez) {
        if (this.prezPosition === 'left' || this.prezPosition === 'right') {
          this.outputEmbedCode.width(this.sourceEmbedCode.width() + this.prezWidth());
        } else {
          this.outputEmbedCode.height(this.sourceEmbedCode.height() + this.prezHeight());
        }
        this.outputEmbedCode.setOption("plugin.prez.src", "http://localhost:8000/prez/plugin.js");
        this.outputEmbedCode.setOption("plugin.prez.speakerDeckId", this.prezId);
        this.outputEmbedCode.setOption("plugin.prez.width", this.prezWidth());
        this.outputEmbedCode.setOption("plugin.prez.height", this.prezHeight());
        this.outputEmbedCode.setOption("plugin.prez.position", this.prezPosition);
      }
      $("#output_embed_code").val(this.outputEmbedCode.toString());
      return this.outputEmbedCode.previewInElem("preview", {
        type: 'api'
      });
    } else {
      $("#output_embed_code").val("Please enter a valid Wistia embed code.");
      return $("#preview").html('<div id="placeholder_preview">Your video here</div>');
    }
  };

  Prez.prototype.debounce = function() {
    clearTimeout(this.updateOutputTimeout);
    return this.updateOutputTimeout = setTimeout(this.updateOutput, 500);
  };

  Prez.prototype.getPresentationData = function(url, callback) {
    var speakerDeckOembedUrl;
    speakerDeckOembedUrl = "https://speakerdeck.com/oembed.json?url=" + (encodeURIComponent(url));
    return $.getJSON("http://jsonp.ru/?callback=?", {
      url: speakerDeckOembedUrl
    }, function(raw) {
      var data;
      data = $.parseJSON(raw['body']);
      return callback(data);
    });
  };

  return Prez;

})();

window.setupLabInterface = function($) {
  return $(function() {
    return window.prez = new Prez();
  });
};
