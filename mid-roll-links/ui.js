// Generated by CoffeeScript 1.3.3
var midroll;

midroll = (function() {

  function midroll() {
    var _this = this;
    this.previewEmbedded = false;
    this.change = false;
    this.exampleEmbedCode = "<div id=\"wistia_r2wybv7xr0\" class=\"wistia_embed\" style=\"width:640px;height:360px;\" data-video-width=\"640\" data-video-height=\"360\">&nbsp;</div><script charset=\"ISO-8859-1\" src=\"http://fast.wistia.com/static/concat/E-v1.js\"></script> <script> wistiaEmbed = Wistia.embed(\"r2wybv7xr0\", { version: \"v1\", videoWidth: 640, videoHeight: 360, volumeControl: true, controlsVisibleOnLoad: true }); </script>";
    $(document).on("click", ".turn_off_fullscreen", function(event) {
      var source;
      event.preventDefault();
      source = Wistia.EmbedCode.parse($("#source_embed_code").val());
      source.setOption("fullscreenButton", false);
      return $("#source_embed_code").val(source.toString()).keyup();
    });
    $("#source_embed_code").on("keyup", function() {
      var change;
      change = true;
      return _this.updateOutput();
    });
    $("a[name=add_new]").on('click', function(e) {
      e.preventDefault();
      return _this.addMidrollInput();
    });
    $("a[name=remove_all]").on('click', function(e) {
      e.preventDefault();
      _this.removeAllInputs();
      _this.addMidrollInput();
      return _this.updateOutput();
    });
    $("a[name=see_example]").on('click', function(e) {
      e.preventDefault();
      _this.removeAllInputs();
      $("#source_embed_code").val(_this.exampleEmbedCode);
      _this.updateOutput();
      _this.addMidrollData("YOU SHOULD CLICK HERE", "unclebenny.com", 2, 10);
      _this.addMidrollData("CHECK OUT UNCLE BENNY!", "unclebenny.com", 8, 14);
      _this.addMidrollData("BUY OUR STUFF!", "unclebenny.com", 12, 22);
      return _this.updateOutput();
    });
    $("#configure").on("keyup", "input[type=text], textarea", this.updateOutput().on("change", "select", this.updateOutput().on("click", ":radio,:checkbox", this.updateOutput())));
  }

  midroll.prototype.updateOutput = function() {
    this.sourceEmbedCode = Wistia.EmbedCode.parse($("#source_embed_code").val());
    this.outputEmbedCode = Wistia.EmbedCode.parse($("#source_embed_code").val());
    if (this.sourceEmbedCode && this.sourceEmbedCode.isValid()) {
      this.playerColor = this.outputEmbedCode.options().playerColor || "636155";
      console.log("playerColor", this.playerColor);
      this.outputEmbedCode.setOption('plugin.midrollLinks.src', "http://localhost:8000/mid-roll-links/mid-roll-links.js");
      this.outputEmbedCode.setOption('plugin.midrollLinks.playerColor', this.playerColor);
      return this.updateEmbedCode();
    } else {
      $("#output_embed_code").val("Please enter a valid Wistia embed code.");
      return $("#preview").html('<div id="placeholder_preview">Your video here</div>');
    }
  };

  midroll.prototype.updateEmbedCode = function() {
    var fullScreenAlert, hasFullscreen, hasMidRoll;
    if (this.sourceEmbedCode && this.sourceEmbedCode.isValid()) {
      hasFullscreen = this.sourceEmbedCode.options().fullscreenButton === null || this.sourceEmbedCode.options().fullscreenButton;
      hasMidRoll = Wistia.obj.get(this.outputEmbedCode.options(), "plugin.midRollLinks");
      fullScreenAlert = "This embed code has fullscreen enabled with mid-rolls. " + "Just so you know, the Midroll Links won't show up when fullscreen. " + "You might want to <a href='#' class='turn_off_fullscreen'>turn off fullscreen</a>.";
      this.midrollData = this.midrollDataFromPage();
      if (hasFullscreen && hasMidRoll) {
        $("#alert").html(fullScreenAlert).show();
      } else {
        $("#alert").html("").hide();
      }
      if (!this.previewEmbedded) {
        return this.setupPlugin();
      } else {
        return this.updatePreview();
      }
    } else {
      $("#output_embed_code").html("Something looks wrong with that embed code." + " Please try adding again.");
      return $("#preview").html('<div id="placeholder_preview">Your video here</div>');
    }
  };

  midroll.prototype.setupPlugin = function() {
    var _this = this;
    console.log("plugin setup ran!");
    console.log("previewEmbedded", this.previewEmbedded);
    this.outputEmbedCode.setOption('plugin.midrollLinks.links', {
      'links': []
    });
    this.outputEmbedCode.setOption('plugin.midrollLinks.playerColor', this.playerColor);
    $("#output_embed_code").val(this.outputEmbedCode.toString());
    this.previewEmbedded = true;
    return this.outputEmbedCode.previewInElem("preview", {
      type: 'api'
    }, function() {
      return _this.updatePreview();
    });
  };

  midroll.prototype.updatePreview = function() {
    return Wistia.timeout('updatePreview', function() {
      var _this = this;
      if (this.change) {
        return this.outputEmbedCode.previewInElem("preview", {
          type: 'api'
        }, function() {
          window.previewEmbed.ready;
          window.previewEmbed.plugin.midrollLinks.update({
            "links": _this.midrollData,
            "playerColor": _this.playerColor
          });
          return _this.change = false;
        });
      } else {
        console.log("running non change update");
        return window.previewEmbed.plugin.midrollLinks({
          "links": this.midrolldata,
          "playerColor": this.playerColor
        });
      }
    }, 250);
  };

  midroll.prototype.midrollDataFromPage = function() {
    var result,
      _this = this;
    result = [];
    $(".midrolls .link_and_time_range_combo").not("#link_and_time_range_combo_template").each(function(index, entry) {
      var end, linkHref, linkText, start;
      linkText = $(entry).find("input[name=link_text]").val();
      console.log("linkText", linkText);
      linkHref = _this.maybeAddHttp($(entry).find("input[name=link_href]").val());
      start = $(entry).find("input[name=start]").val();
      end = $(entry).find("input[name=end]").val();
      if (linkText && linkHref && parseInt(start, 10) && end) {
        return result.push({
          linkText: linkText,
          linkHref: linkHref,
          start: parseInt(start, 10),
          end: parseInt(end, 10)
        });
      }
    });
    return result;
  };

  midroll.prototype.addMidrollInput = function() {
    var $elem;
    $elem = $("#link_and_time_range_combo_template").clone();
    $elem.show().removeAttr("id");
    $(".midrolls .mid_roll_entries").append($elem);
    return $elem;
  };

  midroll.prototype.addMidrollData = function(link_text, link_href, start, end) {
    var $elem;
    $elem = this.addMidrollInput();
    $elem.find("input[name=link_text]").focus().val(link_text);
    $elem.find("input[name=link_href]").focus().val(link_href);
    $elem.find("input[name=start]").focus().val(start);
    return $elem.find("input[name=end]").focus().val(end);
  };

  midroll.prototype.addDefaultMidroll = function(link_text, link_href, start, end) {
    var $elem;
    $elem = this.addMidrollInput();
    $elem.addClass('example');
    $elem.find("input[name=link_text]").example(link_text);
    $elem.find("input[name=link_href]").example(link_href);
    $elem.find("input[name=start]").example(start);
    return $elem.find("input[name=end]").example(end);
  };

  midroll.prototype.removeAllInputs = function() {
    return $(".midrolls .link_and_time_range_combo").not("#link_and_time_range_combo_template").remove();
  };

  midroll.prototype.maybeAddHttp = function(href) {
    console.log("href", href);
    if (href.indexOf("http") === -1) {
      return "http://" + href;
    } else {
      return href;
    }
  };

  return midroll;

})();

window.setupLabInterface = function($) {
  return $(function() {
    return window.midroll = new midroll();
  });
};
