// Generated by CoffeeScript 1.6.3
(function(W) {
  return W.plugin("ageRestriction", function(video, options) {
    var buttonStyle, challengeSubtitle, challengeText, challengeTextStyle, checkAge, container, createAgeElements, createDOBElements, createSharedElements, dateOfBirth, displayErrorMessage, dobForm, elem, errorText, inlineCss, largeFontSize, minimumAge, noButton, playVideo, removeExitingForm, removeOverlay, standardFontSize, submitButton, updateAge, updateType, uuid, yesButton;
    if (options == null) {
      options = {};
    }
    if (!options.type) {
      return;
    }
    if (!options.minimumAge) {
      return;
    }
    minimumAge = parseInt(options.minimumAge);
    uuid = W.seqId("age_gate_");
    video.suppressPlay(true);
    video.pause();
    standardFontSize = "" + (video.height() / 20) + "px";
    largeFontSize = "" + (video.height() / 15) + "px";
    inlineCss = "#" + uuid + "-dob::-webkit-inner-spin-button,\n#" + uuid + "-dob::-webkit-calendar-picker-indicator {\n  display: none;\n  -webkit-appearance: none;\n}";
    buttonStyle = {
      "background-color": "#3498ea",
      "border": "0",
      "border-radius": "0",
      "color": "#fff",
      "cursor": "pointer",
      "display": "inline-block",
      "font-size": standardFontSize,
      "height": "40px",
      "line-height": "40px",
      "margin-right": "10px",
      "outline": "0",
      "padding": "0 10px",
      "vertical-align": "top"
    };
    challengeTextStyle = {
      "font-size": largeFontSize,
      "font-weight": 700,
      "margin": "0 auto",
      "padding-bottom": "1em",
      "width": "85%"
    };
    elem = W.elem.fromObject({
      id: uuid,
      style: {
        "background-color": "#333",
        "color": "#fff",
        "font-family": "Open Sans,Arial,sans-serif",
        "height": "" + (video.height()) + "px",
        "left": 0,
        "top": 0,
        "position": "absolute",
        "text-align": "center",
        "width": "" + (video.width()) + "px",
        "z-index": 100
      }
    });
    container = W.elem.fromObject({
      id: "" + uuid + "-container",
      style: {
        "margin-top": "" + (video.height() / 4) + "px"
      }
    });
    errorText = W.elem.fromObject({
      id: "" + uuid + "-error-text",
      innerHTML: "<div>You are not old enough to view this video.</div>",
      style: {
        "color": "#f5d535",
        "display": "none",
        "font-size": largeFontSize,
        "font-weight": 700,
        "margin": "0 auto",
        "width": "85%"
      }
    });
    challengeText = W.elem.fromObject({
      id: "" + uuid + "-challenge-text",
      innerHTML: "<div>You must be at least <span class='" + uuid + "-minimum-age'>" + minimumAge + "</span> to view this video.",
      style: challengeTextStyle
    });
    yesButton = W.elem.fromObject({
      id: "" + uuid + "-yes-button",
      innerHTML: "I'm <span class='" + uuid + "-minimum-age'>" + minimumAge + "</span> or over",
      style: buttonStyle
    });
    noButton = W.elem.fromObject({
      id: "" + uuid + "-no-button",
      innerHTML: "I'm under <span class='" + uuid + "-minimum-age'>" + minimumAge + "</span>",
      style: buttonStyle
    });
    challengeSubtitle = W.elem.fromObject({
      id: "" + uuid + "-challenge-subtitle",
      innerHTML: "Please enter your date of birth.",
      style: {
        "font-style": "italic",
        "font-size": "20px",
        "margin": "0 auto"
      }
    });
    dobForm = W.elem.fromObject({
      id: "" + uuid + "-dob-form",
      tagName: "form",
      style: {
        "margin-bottom": "1em"
      }
    });
    dateOfBirth = W.elem.fromObject({
      id: "" + uuid + "-dob",
      tagName: "input",
      type: "date",
      style: {
        "border": "0",
        "border-radius": "0",
        "color": "#666",
        "font-size": standardFontSize,
        "font-family": "Open Sans,Arial,sans-serif",
        "height": "40px",
        "line-height": "40px",
        "margin": "0",
        "outline": "none",
        "padding": "0 10px",
        "text-transform": "uppercase",
        "vertical-align": "top",
        "width": "140px"
      }
    });
    submitButton = W.elem.fromObject({
      id: "" + uuid + "-submit-button",
      tagName: "input",
      type: "submit",
      value: "Play",
      style: buttonStyle
    });
    createAgeElements = function() {
      W.elem.append(container, challengeText);
      W.elem.append(container, yesButton);
      W.elem.append(container, noButton);
      yesButton.onclick = playVideo;
      return noButton.onclick = displayErrorMessage;
    };
    createDOBElements = function() {
      W.util.addInlineCss(elem, inlineCss);
      W.elem.append(dobForm, dateOfBirth);
      W.elem.append(dobForm, submitButton);
      W.elem.append(container, challengeText);
      W.elem.append(container, dobForm);
      W.elem.append(container, challengeSubtitle);
      return submitButton.onclick = checkAge;
    };
    createSharedElements = function() {
      W.elem.append(container, errorText);
      W.elem.append(elem, container);
      return W.elem.append(video.grid.top_inside, elem);
    };
    playVideo = function() {
      removeExitingForm();
      removeOverlay();
      video.suppressPlay(false);
      return video.play();
    };
    displayErrorMessage = function() {
      if ((yesButton != null) && (noButton != null)) {
        yesButton.style.display = "none";
        noButton.style.display = "none";
      }
      if ((dobForm != null) && (challengeSubtitle != null)) {
        dobForm.style.display = "none";
        challengeSubtitle.style.display = "none";
      }
      return errorText.style.display = "block";
    };
    checkAge = function() {
      var age, dob;
      dob = document.getElementById("" + uuid + "-dob").value;
      age = Math.floor((Date.now() - new Date(dob)) / (1000 * 60 * 60 * 24 * 365.25));
      if (age >= minimumAge) {
        playVideo();
      } else {
        displayErrorMessage();
      }
      return false;
    };
    removeExitingForm = function() {
      var parent;
      if (container && (parent = container.parentNode)) {
        parent.removeChild(container);
        return container = null;
      }
    };
    removeOverlay = function() {
      var parent;
      if (elem && (parent = elem.parentNode)) {
        parent.removeChild(elem);
        return elem = null;
      }
    };
    updateAge = function(age) {
      var e, elements, _i, _len, _results;
      if (!age) {
        return;
      }
      minimumAge = parseInt(age);
      elements = document.getElementsByClassName("" + uuid + "-minimum-age");
      _results = [];
      for (_i = 0, _len = elements.length; _i < _len; _i++) {
        e = elements[_i];
        _results.push(e.innerHTML = age);
      }
      return _results;
    };
    updateType = function(type) {
      if (!type) {
        return;
      }
      removeExitingForm();
      container = W.elem.fromObject({
        id: "" + uuid + "-container",
        style: {
          "margin-top": "" + (video.height() / 4) + "px"
        }
      });
      if (type === 'age') {
        createAgeElements();
      }
      if (type === 'dob') {
        createDOBElements();
      }
      return createSharedElements();
    };
    if (options.type === "age") {
      createAgeElements();
    }
    if (options.type === "dob") {
      createDOBElements();
    }
    createSharedElements();
    return {
      updateAge: updateAge,
      updateType: updateType
    };
  });
})(Wistia);
