// Generated by CoffeeScript 1.4.0

Wistia.plugin("dimTheLights", function(video, options) {
  var bindEvent, container, dim, dimmed, elem, elems, insertElems, k, pageOffset, positionElems, prop, removeElem, setBasicStyles, setupBackdropBindings, t, undim, uuid, _i, _len, _ref, _ref1;
  if (options == null) {
    options = {};
  }
  if ((_ref = video.options) != null ? _ref.popover : void 0) {
    return;
  }
  uuid = Wistia.seqId();
  container = video.iframe ? video.iframe : video.container;
  pageOffset = function(elem) {
    var curLeft, curTop;
    curLeft = curTop = 0;
    if (elem.offsetParent) {
      while (elem) {
        curLeft += elem.offsetLeft;
        curTop += elem.offsetTop;
        elem = elem.offsetParent;
      }
    }
    return {
      left: curLeft,
      top: curTop
    };
  };
  if (Wistia.detect.browser.msie) {
    bindEvent = function(elem, event, fn) {
      return elem.attachEvent("on" + event, fn);
    };
  } else {
    bindEvent = function(elem, event, fn) {
      return elem.addEventListener(event, fn, false);
    };
  }
  removeElem = function(elem) {
    var par;
    if (par = elem.parentNode) {
      par.removeChild(elem);
      return elem = null;
    }
  };
  elems = {};
  _ref1 = ['left', 'right', 'top', 'bottom'];
  for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
    k = _ref1[_i];
    elems[k] = document.createElement("div");
    elems[k].id = "" + uuid + "_" + k;
    elems[k].className = "wistia-dim-backdrop";
  }
  setBasicStyles = function(elem) {
    elem.style.position = "absolute";
    if (Wistia.detect.browser.msie && Wistia.detect.browser.version < 8) {
      return elem.style.filter = "progid:DXImageTransform.Microsoft.gradient(startColorStr='#000000e6', endColorStr='#000000e6')";
    } else {
      return elem.style.backgroundColor = "rgba(0,0,0,.9)";
    }
  };
  positionElems = function() {
    var docHeight, docWidth, offset, videoHeight, videoWidth, videoX, videoY;
    offset = pageOffset(container);
    videoX = offset.left;
    videoY = offset.top;
    videoWidth = video.width();
    videoHeight = video.height();
    docWidth = document.body.clientWidth;
    docHeight = document.body.clientHeight;
    elems.left.style.width = "" + videoX + "px";
    elems.left.style.height = "" + docHeight + "px";
    elems.left.style.left = "0px";
    elems.left.style.top = "0px";
    elems.right.style.width = "" + (docWidth - videoX - videoWidth) + "px";
    elems.right.style.height = "" + docHeight + "px";
    elems.right.style.left = "" + (videoX + videoWidth) + "px";
    elems.right.style.top = "0px";
    elems.top.style.width = "" + videoWidth + "px";
    elems.top.style.height = "" + videoY + "px";
    elems.top.style.left = "" + videoX + "px";
    elems.top.style.top = "0px";
    elems.bottom.style.width = "" + videoWidth + "px";
    elems.bottom.style.height = "" + (docHeight - videoY - videoHeight) + "px";
    elems.bottom.style.left = "" + videoX + "px";
    return elems.bottom.style.top = "" + (videoY + videoHeight) + "px";
  };
  insertElems = function() {
    var v, _results;
    _results = [];
    for (k in elems) {
      v = elems[k];
      _results.push(document.body.appendChild(v));
    }
    return _results;
  };
  dimmed = false;
  dim = function() {
    var elem, _results;
    dimmed = true;
    container.className = container.className.replace(/wistia-dim-target/g, "") + " wistia-dim-target";
    document.body.className = (document.body.className || "").replace(/wistia-dim-the-lights/g, "") + " wistia-dim-the-lights";
    insertElems();
    positionElems();
    _results = [];
    for (k in elems) {
      elem = elems[k];
      _results.push(elem.className = elem.className.replace(/wistia-invisible/g, "") + " wistia-visible");
    }
    return _results;
  };
  undim = function() {
    var elem, _results;
    dimmed = false;
    container.className = container.className.replace(/wistia-dim-target/g, "");
    document.body.className = (document.body.className || "").replace(/wistia-dim-the-lights/g, "");
    _results = [];
    for (k in elems) {
      elem = elems[k];
      _results.push((function(elem) {
        elem.className = elem.className.replace(/wistia-visible/g, "") + " wistia-invisible";
        return Wistia.timeout("" + uuid + ".undim." + k, (function() {
          return removeElem(elem);
        }), 600);
      })(elem));
    }
    return _results;
  };
  setupBackdropBindings = function(elem) {
    return bindEvent(elem, "click", function() {
      video.pause();
      return undim();
    });
  };
  bindEvent(window, "resize", function() {
    if (dimmed) {
      return positionElems();
    }
  });
  for (k in elems) {
    elem = elems[k];
    setBasicStyles(elem);
    setupBackdropBindings(elem);
  }
  prop = "opacity";
  t = ".6";
  Wistia.util.addInlineCss(document.body, ".wistia-dim-backdrop {\ncursor:pointer;\nfilter:alpha(opacity=0);\nopacity:0;\nz-index:16777271;\n}\n.wistia-dim-backdrop.wistia-visible {\nfilter:alpha(opacity=100);\nopacity:1;\n-webkit-transition: " + prop + " " + t + "s ease-in-out;\n-moz-transition: " + prop + " " + t + "s ease-in-out;\n-o-transition: " + prop + " " + t + "s ease-in-out;\n-ms-transition: " + prop + " " + t + "s ease-in-out;\ntransition: " + prop + " " + t + "s ease-in-out;\n}\n.wistia-dim-backdrop.wistia-invisible {\nfilter:alpha(opacity=0);\nopacity:0;\n-webkit-transition: " + prop + " " + t + "s ease-in-out;\n-moz-transition: " + prop + " " + t + "s ease-in-out;\n-o-transition: " + prop + " " + t + "s ease-in-out;\n-ms-transition: " + prop + " " + t + "s ease-in-out;\ntransition: " + prop + " " + t + "s ease-in-out;\n}\n.wistia-dim-target {\nbox-shadow:0 0 50px 5px rgba(0,0,0,.95);\n}\n.wistia-dim-the-lights textarea {\nresize:none!important;\n}");
  video.bind("play", dim);
  video.bind("pause", undim);
  video.bind("end", undim);
  return {
    dim: dim,
    undim: undim,
    elems: elems
  };
});
